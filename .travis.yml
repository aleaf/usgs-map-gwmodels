language: python

matrix:
  include:
    # test with python 3.7 and latest flopy release available via conda
    - env: ENV_FILE="ci/37-conda-flopy.yml"

    # test with latest python version and flopy develop branch
    - env: ENV_FILE="ci/latest-python-flopy-develop.yml"

  # for flopy bugs that haven't been fixed in the latest conda release
  allow_failures:
    - env: ENV_FILE="ci/37-conda-flopy.yml"

env:
  global:
    # Doctr deploy key for aleaf/usgs-map-gwmodels
    - secure: "rFHKl0a2naNjAfepyJuMQIa3eVoky72SOYg58ljtoror3kYDm38STFJL6MO0SqU8u2yHD5VX80mWm2uqVUf4qhPhwK3+iV4sLMX5st+OWHguZUqVaKsi/ogCv6S/v4DC4HJBzeAjMi703Ki+g8OTbpTbVptmgJJCFPxo81vrcn0DMs4t/aY+4wqGk3QuKgXp8+TZAH2vigyYrF1FfJlWAyrIbxjeKSAThGEVmJ51qnaSAZQsMT6aDG0x39f+4RrLquGvPgEEkixB0u//0QI3s5lzclG9N8mLkGk9UIguDlvlRGwWvchiN1TCV1FYEEWtNbvW2kfrVPjU3Jxxu0XJau37d48SBxbiAhx7m4pXl7eZ1DVIAN/aWWi3j2K0+skcOjCZtSchq3GCC9dJZaDUTNQ+j1NGPeihM5TeHc02Opv9BDYXiuGQzWHK8Uo0NdluBrGC6w/kCemM8Z8/WrVICAAYYX03RLsE8FZOcnrf/+nGKx2qrofBk7LTlT0E89Rm1cCOM2aCjreK78+crb6G+QSQqeNPz7u9rAD5QmktSmGHZ6/XJpDOopKnovkvvW/P+GA0rDlOuwzXaL//YXEqt69F2ZcCjKMDMPmSKHTvsY/+IITkfoUF3ANy/JBCEK6FB7KeF5cc8gh8KbpwrtNxFrfFtNl1bJCmmS8qxCnTqQM="

install:
  - sudo apt-get update
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - export PATH="$HOME/build/aleaf/modflow-setup/bin/linux:$PATH"
  - echo $PATH
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update conda
  - conda info -a
  - conda env create --file="${ENV_FILE}"
  - source activate test
  - pip install -e .
  - python -m ipykernel install --user --name test --display-name "test"
  - conda list

  # Install this package and the packages listed in requirements.txt.
  #- pip install .
  # Install extra requirements for running tests and building docs.
  #- pip install -r requirements-dev.txt

script:
  - coverage run -m pytest -v  # Run the tests and check for test coverage.
  - coverage report -m  # Generate test coverage report.
  - set -e
  - make -C docs html  # Build the documentation.
  #  Publish the documentation with builds on master or develop branch
  - doctr deploy --built-docs docs/build/html . --branch-whitelist master develop

after_success:
  - codecov  # Upload the report to codecov.
  #- flake8 --max-line-length=115  # Enforce code style (but relax line length limit a bit).
  - make -C docs html  # Build the documentation.
